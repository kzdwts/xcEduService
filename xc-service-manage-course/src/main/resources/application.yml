server:
  port: 31200
spring:
  application:
    name: xc-service-manage-course
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.100.132:3306/xc_course?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true
    username: root
    password: 1024KangYong@MySQL
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20 # 最大连接数量
      max-wait: 10000 # 获取连接最大等待时间，毫秒
      test-on-borrow: true # 申请连接时检测连接是否有效
      test-on-return: false #归还连接时检测连接是否有效
      time-between-eviction-runs-millis: 60000  # 配置间隔检测连接是否有效的时间（单位是毫秒）
      min-evictable-idle-time-millis: 300000 # 连接在连接池的最小生存时间（毫秒）
    hikari:
      max-lifetime: 28830000 # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximum-pool-size: 9 # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    com.xuecheng.manage_course.dao: trace
pagehelper:
  # sql方言
  helper-dialect: mysql
eureka:
  client:
    register-with-eureka: true # 服务注册开关
    fetch-registry: true # 服务发现开关
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/} # 避免某台注册中心宕机导致服务不能用
  instance:
    prefer-ip-address: true # 将自己的ip地址注册到eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} # 指定实例id
