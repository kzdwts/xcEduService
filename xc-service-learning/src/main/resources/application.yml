server:
  port: ${prot:40600}
spring:
  application:
    name: xc-service-learning
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: ${MYSQL_URL:jdbc:mysql://192.168.100.132:3306/xc_learning?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true}
    username: root
    password: 1024KangYong@MySQL
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20 # 最大连接数量
      max-wait: 10000 # 获取连接最大等待时间，毫秒
      test-on-borrow: true # 申请连接时检测连接是否有效
      test-on-return: false #归还连接时检测连接是否有效
      time-between-eviction-runs-millis: 60000  # 配置间隔检测连接是否有效的时间（单位是毫秒）
      min-evictable-idle-time-millis: 300000 # 连接在连接池的最小生存时间（毫秒）
eureka:
  client:
    register-with-eureka: true # 服务注册开关
    fetch-registry: true # 服务发现开关
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/} # 避免某台注册中心宕机导致服务不能用
  instance:
    prefer-ip-address: true # 将自己的ip地址注册到eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} # 指定实例id
ribbon:
  max-auto-retries: 2 # 最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  max-auto-retries-next-server: 3 # 切换实例的重试次数
  ok-to-retry-on-all-operations: false # 对所有操作请求都进行重试，如果是get则可以
  connection-timeout: 5000 # 请求连接的超时时间
  read-timeout: 6000 # 请求处理的超时时间
